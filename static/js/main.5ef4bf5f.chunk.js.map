{"version":3,"sources":["components/Calculator.js","App.js","index.js"],"names":["Calculator","useState","prevState","setPrevState","currentState","setCurrentState","num","setNum","operator","setOperator","total","setTotal","inputNum","e","includes","target","innerText","pre","useEffect","operators","equals","cal","String","parseFloat","className","onClick","App","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.5ef4bf5f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"../styles.css\";\r\n\r\nfunction Calculator() {\r\n  const [prevState, setPrevState] = useState(\"\");\r\n  const [currentState, setCurrentState] = useState(\"\");\r\n  const [num, setNum] = useState(\"\");\r\n  const [operator, setOperator] = useState(null);\r\n  const [total, setTotal] = useState(false);\r\n\r\n  const inputNum = (e) => {\r\n    if (currentState.includes(\".\") && e.target.innerText === \".\") return;\r\n    if (currentState === \"0\" && e.target.innerText === \"0\") return currentState;\r\n    if (currentState === \"\" && e.target.innerText === \".\") return currentState;\r\n\r\n    if (total) {\r\n      setPrevState(\"\");\r\n    }\r\n\r\n    currentState\r\n      ? setCurrentState((pre) => pre + e.target.innerText)\r\n      : setCurrentState(e.target.innerText);\r\n    setTotal(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setNum(currentState);\r\n  }, [currentState]);\r\n\r\n  useEffect(() => {\r\n    setNum(\"\");\r\n  }, []);\r\n\r\n  const operators = (e) => {\r\n    setTotal(false);\r\n    setOperator(e.target.innerText);\r\n    if (currentState === \"\") return;\r\n    if (prevState !== \"\") {\r\n      equals();\r\n    } else {\r\n      setPrevState(currentState);\r\n      setCurrentState(\"\");\r\n    }\r\n  };\r\n\r\n  const equals = (e) => {\r\n    if (e?.target.innerText === \"=\") {\r\n      setTotal(true);\r\n    }\r\n    let cal;\r\n    switch (operator) {\r\n      case \"รท\":\r\n        cal = String(parseFloat(prevState) / parseFloat(currentState));\r\n        break;\r\n\r\n      case \"+\":\r\n        cal = String(parseFloat(prevState) + parseFloat(currentState));\r\n        break;\r\n      case \"x\":\r\n        cal = String(parseFloat(prevState) * parseFloat(currentState));\r\n        break;\r\n      case \"-\":\r\n        cal = String(parseFloat(prevState) - parseFloat(currentState));\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n    setNum(\"\");\r\n    setPrevState(cal);\r\n    setCurrentState(\"\");\r\n  };\r\n\r\n  const reset = () => {\r\n    setPrevState(\"\");\r\n    setCurrentState(\"\");\r\n    setNum(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <main className=\"calculator-container\">\r\n        <h1>Calculator</h1>\r\n        <div className=\"output\">\r\n          {num !== \"\" || num === \"0\" ? num : prevState}\r\n        </div>\r\n        <div className=\"row-1\">\r\n          <button onClick={inputNum}>7</button>\r\n          <button onClick={inputNum}>8</button>\r\n          <button onClick={inputNum}>9</button>\r\n          <button onClick={operators} className=\"operator\">\r\n            รท\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"row-2\">\r\n          <button onClick={inputNum}>4</button>\r\n          <button onClick={inputNum}>5</button>\r\n          <button onClick={inputNum}>6</button>\r\n          <button onClick={operators} className=\"operator\">\r\n            x\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"row-3\">\r\n          <button onClick={inputNum}>1</button>\r\n          <button onClick={inputNum}>2</button>\r\n          <button onClick={inputNum}>3</button>\r\n          <button onClick={operators} className=\"operator\">\r\n            -\r\n          </button>\r\n        </div>\r\n        <div className=\"row-4\">\r\n          <button onClick={inputNum} className=\"zero\">\r\n            0\r\n          </button>\r\n          <button onClick={inputNum} className=\"decimal\">\r\n            .\r\n          </button>\r\n        </div>\r\n        <div className=\"row-5\">\r\n          <button onClick={reset} className=\"clear\">\r\n            C\r\n          </button>\r\n          <button onClick={equals} className=\"equal\">\r\n            =\r\n          </button>\r\n          <button onClick={operators} className=\"plus operator\">\r\n            +\r\n          </button>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\nexport default Calculator;\r\n","import \"./styles.css\";\nimport React from \"react\";\nimport Calculator from \"./components/Calculator\";\n\nexport default function App() {\n  return (\n    <>\n      <Calculator />\n    </>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}